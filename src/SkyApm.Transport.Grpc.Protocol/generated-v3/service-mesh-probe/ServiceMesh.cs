// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service-mesh-probe/service-mesh.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SkyWalking.NetworkProtocol.V3 {

  /// <summary>Holder for reflection information generated from service-mesh-probe/service-mesh.proto</summary>
  public static partial class ServiceMeshReflection {

    #region Descriptor
    /// <summary>File descriptor for service-mesh-probe/service-mesh.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceMeshReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVzZXJ2aWNlLW1lc2gtcHJvYmUvc2VydmljZS1tZXNoLnByb3RvEg1za3l3",
            "YWxraW5nLnYzGhNjb21tb24vQ29tbW9uLnByb3RvIpkBChJTZXJ2aWNlTWVz",
            "aE1ldHJpY3MSPAoLaHR0cE1ldHJpY3MYASABKAsyJS5za3l3YWxraW5nLnYz",
            "LkhUVFBTZXJ2aWNlTWVzaE1ldHJpY3NIABI6Cgp0Y3BNZXRyaWNzGAIgASgL",
            "MiQuc2t5d2Fsa2luZy52My5UQ1BTZXJ2aWNlTWVzaE1ldHJpY3NIAEIJCgdt",
            "ZXRyaWNzIs8EChVIVFRQU2VydmljZU1lc2hNZXRyaWMSEQoJc3RhcnRUaW1l",
            "GAEgASgDEg8KB2VuZFRpbWUYAiABKAMSGQoRc291cmNlU2VydmljZU5hbWUY",
            "AyABKAkSHQoVc291cmNlU2VydmljZUluc3RhbmNlGAQgASgJEhcKD2Rlc3RT",
            "ZXJ2aWNlTmFtZRgFIAEoCRIbChNkZXN0U2VydmljZUluc3RhbmNlGAYgASgJ",
            "EhAKCGVuZHBvaW50GAcgASgJEg8KB2xhdGVuY3kYCCABKAUSFAoMcmVzcG9u",
            "c2VDb2RlGAkgASgFEg4KBnN0YXR1cxgKIAEoCBIpCghwcm90b2NvbBgLIAEo",
            "DjIXLnNreXdhbGtpbmcudjMuUHJvdG9jb2wSLwoLZGV0ZWN0UG9pbnQYDCAB",
            "KA4yGi5za3l3YWxraW5nLnYzLkRldGVjdFBvaW50Eg8KB3Rsc01vZGUYDSAB",
            "KAkSGQoRaW50ZXJuYWxFcnJvckNvZGUYDiABKAkSIwobaW50ZXJuYWxSZXF1",
            "ZXN0TGF0ZW5jeU5hbm9zGA8gASgDEiQKHGludGVybmFsUmVzcG9uc2VMYXRl",
            "bmN5TmFub3MYECABKAMSQwoYc291cmNlSW5zdGFuY2VQcm9wZXJ0aWVzGBEg",
            "AygLMiEuc2t5d2Fsa2luZy52My5LZXlTdHJpbmdWYWx1ZVBhaXISQQoWZGVz",
            "dEluc3RhbmNlUHJvcGVydGllcxgSIAMoCzIhLnNreXdhbGtpbmcudjMuS2V5",
            "U3RyaW5nVmFsdWVQYWlyIk8KFkhUVFBTZXJ2aWNlTWVzaE1ldHJpY3MSNQoH",
            "bWV0cmljcxgBIAMoCzIkLnNreXdhbGtpbmcudjMuSFRUUFNlcnZpY2VNZXNo",
            "TWV0cmljIoQEChRUQ1BTZXJ2aWNlTWVzaE1ldHJpYxIRCglzdGFydFRpbWUY",
            "ASABKAMSDwoHZW5kVGltZRgCIAEoAxIZChFzb3VyY2VTZXJ2aWNlTmFtZRgD",
            "IAEoCRIdChVzb3VyY2VTZXJ2aWNlSW5zdGFuY2UYBCABKAkSFwoPZGVzdFNl",
            "cnZpY2VOYW1lGAUgASgJEhsKE2Rlc3RTZXJ2aWNlSW5zdGFuY2UYBiABKAkS",
            "LwoLZGV0ZWN0UG9pbnQYByABKA4yGi5za3l3YWxraW5nLnYzLkRldGVjdFBv",
            "aW50Eg8KB3Rsc01vZGUYCCABKAkSGQoRaW50ZXJuYWxFcnJvckNvZGUYCSAB",
            "KAkSIwobaW50ZXJuYWxSZXF1ZXN0TGF0ZW5jeU5hbm9zGAogASgDEiQKHGlu",
            "dGVybmFsUmVzcG9uc2VMYXRlbmN5TmFub3MYCyABKAMSQwoYc291cmNlSW5z",
            "dGFuY2VQcm9wZXJ0aWVzGAwgAygLMiEuc2t5d2Fsa2luZy52My5LZXlTdHJp",
            "bmdWYWx1ZVBhaXISQQoWZGVzdEluc3RhbmNlUHJvcGVydGllcxgNIAMoCzIh",
            "LnNreXdhbGtpbmcudjMuS2V5U3RyaW5nVmFsdWVQYWlyEhUKDXJlY2VpdmVk",
            "Qnl0ZXMYDiABKAMSEQoJc2VudEJ5dGVzGA8gASgDIk0KFVRDUFNlcnZpY2VN",
            "ZXNoTWV0cmljcxI0CgdtZXRyaWNzGAEgAygLMiMuc2t5d2Fsa2luZy52My5U",
            "Q1BTZXJ2aWNlTWVzaE1ldHJpYyIVChNNZXNoUHJvYmVEb3duc3RyZWFtKh4K",
            "CFByb3RvY29sEggKBEhUVFAQABIICgRnUlBDEAEycAoYU2VydmljZU1lc2hN",
            "ZXRyaWNTZXJ2aWNlElQKB2NvbGxlY3QSIS5za3l3YWxraW5nLnYzLlNlcnZp",
            "Y2VNZXNoTWV0cmljcxoiLnNreXdhbGtpbmcudjMuTWVzaFByb2JlRG93bnN0",
            "cmVhbSIAKAFCjQEKMG9yZy5hcGFjaGUuc2t5d2Fsa2luZy5hcG0ubmV0d29y",
            "ay5zZXJ2aWNlbWVzaC52M1ABWjdza3l3YWxraW5nLmFwYWNoZS5vcmcvcmVw",
            "by9nb2FwaS9jb2xsZWN0L3NlcnZpY2VtZXNoL3YzqgIdU2t5V2Fsa2luZy5O",
            "ZXR3b3JrUHJvdG9jb2wuVjNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkyWalking.NetworkProtocol.V3.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SkyWalking.NetworkProtocol.V3.Protocol), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.ServiceMeshMetrics), global::SkyWalking.NetworkProtocol.V3.ServiceMeshMetrics.Parser, new[]{ "HttpMetrics", "TcpMetrics" }, new[]{ "Metrics" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric), global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric.Parser, new[]{ "StartTime", "EndTime", "SourceServiceName", "SourceServiceInstance", "DestServiceName", "DestServiceInstance", "Endpoint", "Latency", "ResponseCode", "Status", "Protocol", "DetectPoint", "TlsMode", "InternalErrorCode", "InternalRequestLatencyNanos", "InternalResponseLatencyNanos", "SourceInstanceProperties", "DestInstanceProperties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics), global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics.Parser, new[]{ "Metrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric), global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric.Parser, new[]{ "StartTime", "EndTime", "SourceServiceName", "SourceServiceInstance", "DestServiceName", "DestServiceInstance", "DetectPoint", "TlsMode", "InternalErrorCode", "InternalRequestLatencyNanos", "InternalResponseLatencyNanos", "SourceInstanceProperties", "DestInstanceProperties", "ReceivedBytes", "SentBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics), global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics.Parser, new[]{ "Metrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.MeshProbeDownstream), global::SkyWalking.NetworkProtocol.V3.MeshProbeDownstream.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Protocol {
    [pbr::OriginalName("HTTP")] Http = 0,
    [pbr::OriginalName("gRPC")] GRpc = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ServiceMeshMetrics : pb::IMessage<ServiceMeshMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceMeshMetrics> _parser = new pb::MessageParser<ServiceMeshMetrics>(() => new ServiceMeshMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceMeshMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceMeshMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceMeshMetrics(ServiceMeshMetrics other) : this() {
      switch (other.MetricsCase) {
        case MetricsOneofCase.HttpMetrics:
          HttpMetrics = other.HttpMetrics.Clone();
          break;
        case MetricsOneofCase.TcpMetrics:
          TcpMetrics = other.TcpMetrics.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceMeshMetrics Clone() {
      return new ServiceMeshMetrics(this);
    }

    /// <summary>Field number for the "httpMetrics" field.</summary>
    public const int HttpMetricsFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics HttpMetrics {
      get { return metricsCase_ == MetricsOneofCase.HttpMetrics ? (global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics) metrics_ : null; }
      set {
        metrics_ = value;
        metricsCase_ = value == null ? MetricsOneofCase.None : MetricsOneofCase.HttpMetrics;
      }
    }

    /// <summary>Field number for the "tcpMetrics" field.</summary>
    public const int TcpMetricsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics TcpMetrics {
      get { return metricsCase_ == MetricsOneofCase.TcpMetrics ? (global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics) metrics_ : null; }
      set {
        metrics_ = value;
        metricsCase_ = value == null ? MetricsOneofCase.None : MetricsOneofCase.TcpMetrics;
      }
    }

    private object metrics_;
    /// <summary>Enum of possible cases for the "metrics" oneof.</summary>
    public enum MetricsOneofCase {
      None = 0,
      HttpMetrics = 1,
      TcpMetrics = 2,
    }
    private MetricsOneofCase metricsCase_ = MetricsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsOneofCase MetricsCase {
      get { return metricsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetrics() {
      metricsCase_ = MetricsOneofCase.None;
      metrics_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceMeshMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceMeshMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HttpMetrics, other.HttpMetrics)) return false;
      if (!object.Equals(TcpMetrics, other.TcpMetrics)) return false;
      if (MetricsCase != other.MetricsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metricsCase_ == MetricsOneofCase.HttpMetrics) hash ^= HttpMetrics.GetHashCode();
      if (metricsCase_ == MetricsOneofCase.TcpMetrics) hash ^= TcpMetrics.GetHashCode();
      hash ^= (int) metricsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metricsCase_ == MetricsOneofCase.HttpMetrics) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpMetrics);
      }
      if (metricsCase_ == MetricsOneofCase.TcpMetrics) {
        output.WriteRawTag(18);
        output.WriteMessage(TcpMetrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metricsCase_ == MetricsOneofCase.HttpMetrics) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpMetrics);
      }
      if (metricsCase_ == MetricsOneofCase.TcpMetrics) {
        output.WriteRawTag(18);
        output.WriteMessage(TcpMetrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metricsCase_ == MetricsOneofCase.HttpMetrics) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpMetrics);
      }
      if (metricsCase_ == MetricsOneofCase.TcpMetrics) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TcpMetrics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceMeshMetrics other) {
      if (other == null) {
        return;
      }
      switch (other.MetricsCase) {
        case MetricsOneofCase.HttpMetrics:
          if (HttpMetrics == null) {
            HttpMetrics = new global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics();
          }
          HttpMetrics.MergeFrom(other.HttpMetrics);
          break;
        case MetricsOneofCase.TcpMetrics:
          if (TcpMetrics == null) {
            TcpMetrics = new global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics();
          }
          TcpMetrics.MergeFrom(other.TcpMetrics);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics subBuilder = new global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics();
            if (metricsCase_ == MetricsOneofCase.HttpMetrics) {
              subBuilder.MergeFrom(HttpMetrics);
            }
            input.ReadMessage(subBuilder);
            HttpMetrics = subBuilder;
            break;
          }
          case 18: {
            global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics subBuilder = new global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics();
            if (metricsCase_ == MetricsOneofCase.TcpMetrics) {
              subBuilder.MergeFrom(TcpMetrics);
            }
            input.ReadMessage(subBuilder);
            TcpMetrics = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics subBuilder = new global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetrics();
            if (metricsCase_ == MetricsOneofCase.HttpMetrics) {
              subBuilder.MergeFrom(HttpMetrics);
            }
            input.ReadMessage(subBuilder);
            HttpMetrics = subBuilder;
            break;
          }
          case 18: {
            global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics subBuilder = new global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetrics();
            if (metricsCase_ == MetricsOneofCase.TcpMetrics) {
              subBuilder.MergeFrom(TcpMetrics);
            }
            input.ReadMessage(subBuilder);
            TcpMetrics = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HTTPServiceMeshMetric : pb::IMessage<HTTPServiceMeshMetric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HTTPServiceMeshMetric> _parser = new pb::MessageParser<HTTPServiceMeshMetric>(() => new HTTPServiceMeshMetric());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HTTPServiceMeshMetric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetric(HTTPServiceMeshMetric other) : this() {
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      sourceServiceName_ = other.sourceServiceName_;
      sourceServiceInstance_ = other.sourceServiceInstance_;
      destServiceName_ = other.destServiceName_;
      destServiceInstance_ = other.destServiceInstance_;
      endpoint_ = other.endpoint_;
      latency_ = other.latency_;
      responseCode_ = other.responseCode_;
      status_ = other.status_;
      protocol_ = other.protocol_;
      detectPoint_ = other.detectPoint_;
      tlsMode_ = other.tlsMode_;
      internalErrorCode_ = other.internalErrorCode_;
      internalRequestLatencyNanos_ = other.internalRequestLatencyNanos_;
      internalResponseLatencyNanos_ = other.internalResponseLatencyNanos_;
      sourceInstanceProperties_ = other.sourceInstanceProperties_.Clone();
      destInstanceProperties_ = other.destInstanceProperties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetric Clone() {
      return new HTTPServiceMeshMetric(this);
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private long startTime_;
    /// <summary>
    /// Start timestamp in milliseconds of this RPC,
    /// measured between the current time and midnight, January 1, 1970 UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private long endTime_;
    /// <summary>
    /// End timestamp in milliseconds of this RPC,
    /// measured between the current time and midnight, January 1, 1970 UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "sourceServiceName" field.</summary>
    public const int SourceServiceNameFieldNumber = 3;
    private string sourceServiceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceServiceName {
      get { return sourceServiceName_; }
      set {
        sourceServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceServiceInstance" field.</summary>
    public const int SourceServiceInstanceFieldNumber = 4;
    private string sourceServiceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceServiceInstance {
      get { return sourceServiceInstance_; }
      set {
        sourceServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destServiceName" field.</summary>
    public const int DestServiceNameFieldNumber = 5;
    private string destServiceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestServiceName {
      get { return destServiceName_; }
      set {
        destServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destServiceInstance" field.</summary>
    public const int DestServiceInstanceFieldNumber = 6;
    private string destServiceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestServiceInstance {
      get { return destServiceInstance_; }
      set {
        destServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 7;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latency" field.</summary>
    public const int LatencyFieldNumber = 8;
    private int latency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Latency {
      get { return latency_; }
      set {
        latency_ = value;
      }
    }

    /// <summary>Field number for the "responseCode" field.</summary>
    public const int ResponseCodeFieldNumber = 9;
    private int responseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private bool status_;
    /// <summary>
    /// Status represents the response status of this calling.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 11;
    private global::SkyWalking.NetworkProtocol.V3.Protocol protocol_ = global::SkyWalking.NetworkProtocol.V3.Protocol.Http;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.Protocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "detectPoint" field.</summary>
    public const int DetectPointFieldNumber = 12;
    private global::SkyWalking.NetworkProtocol.V3.DetectPoint detectPoint_ = global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.DetectPoint DetectPoint {
      get { return detectPoint_; }
      set {
        detectPoint_ = value;
      }
    }

    /// <summary>Field number for the "tlsMode" field.</summary>
    public const int TlsModeFieldNumber = 13;
    private string tlsMode_ = "";
    /// <summary>
    /// NONE, mTLS, or TLS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TlsMode {
      get { return tlsMode_; }
      set {
        tlsMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internalErrorCode" field.</summary>
    public const int InternalErrorCodeFieldNumber = 14;
    private string internalErrorCode_ = "";
    /// <summary>
    /// The sidecar/proxy internal error code, the value bases on the implementation.
    /// The envoy internal error codes are listed here, https://www.envoyproxy.io/docs/envoy/latest/api-v2/data/accesslog/v2/accesslog.proto#data-accesslog-v2-responseflags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InternalErrorCode {
      get { return internalErrorCode_; }
      set {
        internalErrorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internalRequestLatencyNanos" field.</summary>
    public const int InternalRequestLatencyNanosFieldNumber = 15;
    private long internalRequestLatencyNanos_;
    /// <summary>
    /// Internal request(response) latency is the time cost inside the Envoy sidecar proxy.
    /// For more details, check https://www.envoyproxy.io/docs/envoy/v1.22.0/api-v3/data/accesslog/v3/accesslog.proto.html#data-accesslog-v3-accesslogcommon.
    /// internalRequestLatencyNanos is the interval between the first downstream byte received and the first upstream byte sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InternalRequestLatencyNanos {
      get { return internalRequestLatencyNanos_; }
      set {
        internalRequestLatencyNanos_ = value;
      }
    }

    /// <summary>Field number for the "internalResponseLatencyNanos" field.</summary>
    public const int InternalResponseLatencyNanosFieldNumber = 16;
    private long internalResponseLatencyNanos_;
    /// <summary>
    /// internalResponseLatencyNanos = time_to_first_downstream_tx_byte - time_to_first_upstream_rx_byte;
    /// | ... request workflow  ... | upstream | ----- response -----> |                proxy                | ------- response -------> | client  |
    /// |                 time_to_first_upstream_rx_byte               |
    /// |                                  time_to_last_downstream_tx_byte                                                               |
    ///                                                                |              internalResponseLatencyNanos                       |
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InternalResponseLatencyNanos {
      get { return internalResponseLatencyNanos_; }
      set {
        internalResponseLatencyNanos_ = value;
      }
    }

    /// <summary>Field number for the "sourceInstanceProperties" field.</summary>
    public const int SourceInstancePropertiesFieldNumber = 17;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> _repeated_sourceInstanceProperties_codec
        = pb::FieldCodec.ForMessage(138, global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> sourceInstanceProperties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> SourceInstanceProperties {
      get { return sourceInstanceProperties_; }
    }

    /// <summary>Field number for the "destInstanceProperties" field.</summary>
    public const int DestInstancePropertiesFieldNumber = 18;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> _repeated_destInstanceProperties_codec
        = pb::FieldCodec.ForMessage(146, global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> destInstanceProperties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> DestInstanceProperties {
      get { return destInstanceProperties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HTTPServiceMeshMetric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HTTPServiceMeshMetric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (SourceServiceName != other.SourceServiceName) return false;
      if (SourceServiceInstance != other.SourceServiceInstance) return false;
      if (DestServiceName != other.DestServiceName) return false;
      if (DestServiceInstance != other.DestServiceInstance) return false;
      if (Endpoint != other.Endpoint) return false;
      if (Latency != other.Latency) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (Status != other.Status) return false;
      if (Protocol != other.Protocol) return false;
      if (DetectPoint != other.DetectPoint) return false;
      if (TlsMode != other.TlsMode) return false;
      if (InternalErrorCode != other.InternalErrorCode) return false;
      if (InternalRequestLatencyNanos != other.InternalRequestLatencyNanos) return false;
      if (InternalResponseLatencyNanos != other.InternalResponseLatencyNanos) return false;
      if(!sourceInstanceProperties_.Equals(other.sourceInstanceProperties_)) return false;
      if(!destInstanceProperties_.Equals(other.destInstanceProperties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (SourceServiceName.Length != 0) hash ^= SourceServiceName.GetHashCode();
      if (SourceServiceInstance.Length != 0) hash ^= SourceServiceInstance.GetHashCode();
      if (DestServiceName.Length != 0) hash ^= DestServiceName.GetHashCode();
      if (DestServiceInstance.Length != 0) hash ^= DestServiceInstance.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (Latency != 0) hash ^= Latency.GetHashCode();
      if (ResponseCode != 0) hash ^= ResponseCode.GetHashCode();
      if (Status != false) hash ^= Status.GetHashCode();
      if (Protocol != global::SkyWalking.NetworkProtocol.V3.Protocol.Http) hash ^= Protocol.GetHashCode();
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) hash ^= DetectPoint.GetHashCode();
      if (TlsMode.Length != 0) hash ^= TlsMode.GetHashCode();
      if (InternalErrorCode.Length != 0) hash ^= InternalErrorCode.GetHashCode();
      if (InternalRequestLatencyNanos != 0L) hash ^= InternalRequestLatencyNanos.GetHashCode();
      if (InternalResponseLatencyNanos != 0L) hash ^= InternalResponseLatencyNanos.GetHashCode();
      hash ^= sourceInstanceProperties_.GetHashCode();
      hash ^= destInstanceProperties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DestServiceInstance);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Endpoint);
      }
      if (Latency != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Latency);
      }
      if (ResponseCode != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ResponseCode);
      }
      if (Status != false) {
        output.WriteRawTag(80);
        output.WriteBool(Status);
      }
      if (Protocol != global::SkyWalking.NetworkProtocol.V3.Protocol.Http) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Protocol);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(InternalResponseLatencyNanos);
      }
      sourceInstanceProperties_.WriteTo(output, _repeated_sourceInstanceProperties_codec);
      destInstanceProperties_.WriteTo(output, _repeated_destInstanceProperties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DestServiceInstance);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Endpoint);
      }
      if (Latency != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Latency);
      }
      if (ResponseCode != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ResponseCode);
      }
      if (Status != false) {
        output.WriteRawTag(80);
        output.WriteBool(Status);
      }
      if (Protocol != global::SkyWalking.NetworkProtocol.V3.Protocol.Http) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Protocol);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(InternalResponseLatencyNanos);
      }
      sourceInstanceProperties_.WriteTo(ref output, _repeated_sourceInstanceProperties_codec);
      destInstanceProperties_.WriteTo(ref output, _repeated_destInstanceProperties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceInstance);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (Latency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Latency);
      }
      if (ResponseCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseCode);
      }
      if (Status != false) {
        size += 1 + 1;
      }
      if (Protocol != global::SkyWalking.NetworkProtocol.V3.Protocol.Http) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(InternalResponseLatencyNanos);
      }
      size += sourceInstanceProperties_.CalculateSize(_repeated_sourceInstanceProperties_codec);
      size += destInstanceProperties_.CalculateSize(_repeated_destInstanceProperties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HTTPServiceMeshMetric other) {
      if (other == null) {
        return;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.SourceServiceName.Length != 0) {
        SourceServiceName = other.SourceServiceName;
      }
      if (other.SourceServiceInstance.Length != 0) {
        SourceServiceInstance = other.SourceServiceInstance;
      }
      if (other.DestServiceName.Length != 0) {
        DestServiceName = other.DestServiceName;
      }
      if (other.DestServiceInstance.Length != 0) {
        DestServiceInstance = other.DestServiceInstance;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.Latency != 0) {
        Latency = other.Latency;
      }
      if (other.ResponseCode != 0) {
        ResponseCode = other.ResponseCode;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      if (other.Protocol != global::SkyWalking.NetworkProtocol.V3.Protocol.Http) {
        Protocol = other.Protocol;
      }
      if (other.DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        DetectPoint = other.DetectPoint;
      }
      if (other.TlsMode.Length != 0) {
        TlsMode = other.TlsMode;
      }
      if (other.InternalErrorCode.Length != 0) {
        InternalErrorCode = other.InternalErrorCode;
      }
      if (other.InternalRequestLatencyNanos != 0L) {
        InternalRequestLatencyNanos = other.InternalRequestLatencyNanos;
      }
      if (other.InternalResponseLatencyNanos != 0L) {
        InternalResponseLatencyNanos = other.InternalResponseLatencyNanos;
      }
      sourceInstanceProperties_.Add(other.sourceInstanceProperties_);
      destInstanceProperties_.Add(other.destInstanceProperties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt64();
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
          case 26: {
            SourceServiceName = input.ReadString();
            break;
          }
          case 34: {
            SourceServiceInstance = input.ReadString();
            break;
          }
          case 42: {
            DestServiceName = input.ReadString();
            break;
          }
          case 50: {
            DestServiceInstance = input.ReadString();
            break;
          }
          case 58: {
            Endpoint = input.ReadString();
            break;
          }
          case 64: {
            Latency = input.ReadInt32();
            break;
          }
          case 72: {
            ResponseCode = input.ReadInt32();
            break;
          }
          case 80: {
            Status = input.ReadBool();
            break;
          }
          case 88: {
            Protocol = (global::SkyWalking.NetworkProtocol.V3.Protocol) input.ReadEnum();
            break;
          }
          case 96: {
            DetectPoint = (global::SkyWalking.NetworkProtocol.V3.DetectPoint) input.ReadEnum();
            break;
          }
          case 106: {
            TlsMode = input.ReadString();
            break;
          }
          case 114: {
            InternalErrorCode = input.ReadString();
            break;
          }
          case 120: {
            InternalRequestLatencyNanos = input.ReadInt64();
            break;
          }
          case 128: {
            InternalResponseLatencyNanos = input.ReadInt64();
            break;
          }
          case 138: {
            sourceInstanceProperties_.AddEntriesFrom(input, _repeated_sourceInstanceProperties_codec);
            break;
          }
          case 146: {
            destInstanceProperties_.AddEntriesFrom(input, _repeated_destInstanceProperties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTime = input.ReadInt64();
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
          case 26: {
            SourceServiceName = input.ReadString();
            break;
          }
          case 34: {
            SourceServiceInstance = input.ReadString();
            break;
          }
          case 42: {
            DestServiceName = input.ReadString();
            break;
          }
          case 50: {
            DestServiceInstance = input.ReadString();
            break;
          }
          case 58: {
            Endpoint = input.ReadString();
            break;
          }
          case 64: {
            Latency = input.ReadInt32();
            break;
          }
          case 72: {
            ResponseCode = input.ReadInt32();
            break;
          }
          case 80: {
            Status = input.ReadBool();
            break;
          }
          case 88: {
            Protocol = (global::SkyWalking.NetworkProtocol.V3.Protocol) input.ReadEnum();
            break;
          }
          case 96: {
            DetectPoint = (global::SkyWalking.NetworkProtocol.V3.DetectPoint) input.ReadEnum();
            break;
          }
          case 106: {
            TlsMode = input.ReadString();
            break;
          }
          case 114: {
            InternalErrorCode = input.ReadString();
            break;
          }
          case 120: {
            InternalRequestLatencyNanos = input.ReadInt64();
            break;
          }
          case 128: {
            InternalResponseLatencyNanos = input.ReadInt64();
            break;
          }
          case 138: {
            sourceInstanceProperties_.AddEntriesFrom(ref input, _repeated_sourceInstanceProperties_codec);
            break;
          }
          case 146: {
            destInstanceProperties_.AddEntriesFrom(ref input, _repeated_destInstanceProperties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HTTPServiceMeshMetrics : pb::IMessage<HTTPServiceMeshMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HTTPServiceMeshMetrics> _parser = new pb::MessageParser<HTTPServiceMeshMetrics>(() => new HTTPServiceMeshMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HTTPServiceMeshMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetrics(HTTPServiceMeshMetrics other) : this() {
      metrics_ = other.metrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPServiceMeshMetrics Clone() {
      return new HTTPServiceMeshMetrics(this);
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric> metrics_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.HTTPServiceMeshMetric> Metrics {
      get { return metrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HTTPServiceMeshMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HTTPServiceMeshMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metrics_.Equals(other.metrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HTTPServiceMeshMetrics other) {
      if (other == null) {
        return;
      }
      metrics_.Add(other.metrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TCPServiceMeshMetric : pb::IMessage<TCPServiceMeshMetric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TCPServiceMeshMetric> _parser = new pb::MessageParser<TCPServiceMeshMetric>(() => new TCPServiceMeshMetric());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TCPServiceMeshMetric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetric(TCPServiceMeshMetric other) : this() {
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      sourceServiceName_ = other.sourceServiceName_;
      sourceServiceInstance_ = other.sourceServiceInstance_;
      destServiceName_ = other.destServiceName_;
      destServiceInstance_ = other.destServiceInstance_;
      detectPoint_ = other.detectPoint_;
      tlsMode_ = other.tlsMode_;
      internalErrorCode_ = other.internalErrorCode_;
      internalRequestLatencyNanos_ = other.internalRequestLatencyNanos_;
      internalResponseLatencyNanos_ = other.internalResponseLatencyNanos_;
      sourceInstanceProperties_ = other.sourceInstanceProperties_.Clone();
      destInstanceProperties_ = other.destInstanceProperties_.Clone();
      receivedBytes_ = other.receivedBytes_;
      sentBytes_ = other.sentBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetric Clone() {
      return new TCPServiceMeshMetric(this);
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private long startTime_;
    /// <summary>
    /// Start timestamp in milliseconds of this RPC,
    /// measured between the current time and midnight, January 1, 1970 UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private long endTime_;
    /// <summary>
    /// End timestamp in milliseconds of this RPC,
    /// measured between the current time and midnight, January 1, 1970 UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "sourceServiceName" field.</summary>
    public const int SourceServiceNameFieldNumber = 3;
    private string sourceServiceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceServiceName {
      get { return sourceServiceName_; }
      set {
        sourceServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceServiceInstance" field.</summary>
    public const int SourceServiceInstanceFieldNumber = 4;
    private string sourceServiceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceServiceInstance {
      get { return sourceServiceInstance_; }
      set {
        sourceServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destServiceName" field.</summary>
    public const int DestServiceNameFieldNumber = 5;
    private string destServiceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestServiceName {
      get { return destServiceName_; }
      set {
        destServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destServiceInstance" field.</summary>
    public const int DestServiceInstanceFieldNumber = 6;
    private string destServiceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestServiceInstance {
      get { return destServiceInstance_; }
      set {
        destServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detectPoint" field.</summary>
    public const int DetectPointFieldNumber = 7;
    private global::SkyWalking.NetworkProtocol.V3.DetectPoint detectPoint_ = global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.DetectPoint DetectPoint {
      get { return detectPoint_; }
      set {
        detectPoint_ = value;
      }
    }

    /// <summary>Field number for the "tlsMode" field.</summary>
    public const int TlsModeFieldNumber = 8;
    private string tlsMode_ = "";
    /// <summary>
    /// NONE, mTLS, or TLS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TlsMode {
      get { return tlsMode_; }
      set {
        tlsMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internalErrorCode" field.</summary>
    public const int InternalErrorCodeFieldNumber = 9;
    private string internalErrorCode_ = "";
    /// <summary>
    /// The sidecar/proxy internal error code, the value bases on the implementation.
    /// The envoy internal error codes are listed here, https://www.envoyproxy.io/docs/envoy/latest/api-v2/data/accesslog/v2/accesslog.proto#data-accesslog-v2-responseflags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InternalErrorCode {
      get { return internalErrorCode_; }
      set {
        internalErrorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internalRequestLatencyNanos" field.</summary>
    public const int InternalRequestLatencyNanosFieldNumber = 10;
    private long internalRequestLatencyNanos_;
    /// <summary>
    /// Internal request(response) latency is the time cost inside the Envoy sidecar proxy.
    /// For more details, check https://www.envoyproxy.io/docs/envoy/v1.22.0/api-v3/data/accesslog/v3/accesslog.proto.html#data-accesslog-v3-accesslogcommon.
    /// internalRequestLatencyNanos is the interval between the first downstream byte received and the first upstream byte sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InternalRequestLatencyNanos {
      get { return internalRequestLatencyNanos_; }
      set {
        internalRequestLatencyNanos_ = value;
      }
    }

    /// <summary>Field number for the "internalResponseLatencyNanos" field.</summary>
    public const int InternalResponseLatencyNanosFieldNumber = 11;
    private long internalResponseLatencyNanos_;
    /// <summary>
    /// internalResponseLatencyNanos = time_to_first_downstream_tx_byte - time_to_first_upstream_rx_byte;
    /// | ... request workflow  ... | upstream | ----- response -----> |                proxy                | ------- response -------> | client  |
    /// |                 time_to_first_upstream_rx_byte               |
    /// |                                  time_to_last_downstream_tx_byte                                                               |
    ///                                                                |              internalResponseLatencyNanos                       |
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InternalResponseLatencyNanos {
      get { return internalResponseLatencyNanos_; }
      set {
        internalResponseLatencyNanos_ = value;
      }
    }

    /// <summary>Field number for the "sourceInstanceProperties" field.</summary>
    public const int SourceInstancePropertiesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> _repeated_sourceInstanceProperties_codec
        = pb::FieldCodec.ForMessage(98, global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> sourceInstanceProperties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> SourceInstanceProperties {
      get { return sourceInstanceProperties_; }
    }

    /// <summary>Field number for the "destInstanceProperties" field.</summary>
    public const int DestInstancePropertiesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> _repeated_destInstanceProperties_codec
        = pb::FieldCodec.ForMessage(106, global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> destInstanceProperties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.KeyStringValuePair> DestInstanceProperties {
      get { return destInstanceProperties_; }
    }

    /// <summary>Field number for the "receivedBytes" field.</summary>
    public const int ReceivedBytesFieldNumber = 14;
    private long receivedBytes_;
    /// <summary>
    /// The received data in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceivedBytes {
      get { return receivedBytes_; }
      set {
        receivedBytes_ = value;
      }
    }

    /// <summary>Field number for the "sentBytes" field.</summary>
    public const int SentBytesFieldNumber = 15;
    private long sentBytes_;
    /// <summary>
    /// The sent data in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SentBytes {
      get { return sentBytes_; }
      set {
        sentBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TCPServiceMeshMetric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TCPServiceMeshMetric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (SourceServiceName != other.SourceServiceName) return false;
      if (SourceServiceInstance != other.SourceServiceInstance) return false;
      if (DestServiceName != other.DestServiceName) return false;
      if (DestServiceInstance != other.DestServiceInstance) return false;
      if (DetectPoint != other.DetectPoint) return false;
      if (TlsMode != other.TlsMode) return false;
      if (InternalErrorCode != other.InternalErrorCode) return false;
      if (InternalRequestLatencyNanos != other.InternalRequestLatencyNanos) return false;
      if (InternalResponseLatencyNanos != other.InternalResponseLatencyNanos) return false;
      if(!sourceInstanceProperties_.Equals(other.sourceInstanceProperties_)) return false;
      if(!destInstanceProperties_.Equals(other.destInstanceProperties_)) return false;
      if (ReceivedBytes != other.ReceivedBytes) return false;
      if (SentBytes != other.SentBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (SourceServiceName.Length != 0) hash ^= SourceServiceName.GetHashCode();
      if (SourceServiceInstance.Length != 0) hash ^= SourceServiceInstance.GetHashCode();
      if (DestServiceName.Length != 0) hash ^= DestServiceName.GetHashCode();
      if (DestServiceInstance.Length != 0) hash ^= DestServiceInstance.GetHashCode();
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) hash ^= DetectPoint.GetHashCode();
      if (TlsMode.Length != 0) hash ^= TlsMode.GetHashCode();
      if (InternalErrorCode.Length != 0) hash ^= InternalErrorCode.GetHashCode();
      if (InternalRequestLatencyNanos != 0L) hash ^= InternalRequestLatencyNanos.GetHashCode();
      if (InternalResponseLatencyNanos != 0L) hash ^= InternalResponseLatencyNanos.GetHashCode();
      hash ^= sourceInstanceProperties_.GetHashCode();
      hash ^= destInstanceProperties_.GetHashCode();
      if (ReceivedBytes != 0L) hash ^= ReceivedBytes.GetHashCode();
      if (SentBytes != 0L) hash ^= SentBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DestServiceInstance);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        output.WriteRawTag(56);
        output.WriteEnum((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(InternalResponseLatencyNanos);
      }
      sourceInstanceProperties_.WriteTo(output, _repeated_sourceInstanceProperties_codec);
      destInstanceProperties_.WriteTo(output, _repeated_destInstanceProperties_codec);
      if (ReceivedBytes != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ReceivedBytes);
      }
      if (SentBytes != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(SentBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DestServiceInstance);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        output.WriteRawTag(56);
        output.WriteEnum((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(InternalResponseLatencyNanos);
      }
      sourceInstanceProperties_.WriteTo(ref output, _repeated_sourceInstanceProperties_codec);
      destInstanceProperties_.WriteTo(ref output, _repeated_destInstanceProperties_codec);
      if (ReceivedBytes != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ReceivedBytes);
      }
      if (SentBytes != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(SentBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (SourceServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceName);
      }
      if (SourceServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceInstance);
      }
      if (DestServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceName);
      }
      if (DestServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceInstance);
      }
      if (DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DetectPoint);
      }
      if (TlsMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsMode);
      }
      if (InternalErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InternalErrorCode);
      }
      if (InternalRequestLatencyNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InternalRequestLatencyNanos);
      }
      if (InternalResponseLatencyNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InternalResponseLatencyNanos);
      }
      size += sourceInstanceProperties_.CalculateSize(_repeated_sourceInstanceProperties_codec);
      size += destInstanceProperties_.CalculateSize(_repeated_destInstanceProperties_codec);
      if (ReceivedBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceivedBytes);
      }
      if (SentBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SentBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TCPServiceMeshMetric other) {
      if (other == null) {
        return;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.SourceServiceName.Length != 0) {
        SourceServiceName = other.SourceServiceName;
      }
      if (other.SourceServiceInstance.Length != 0) {
        SourceServiceInstance = other.SourceServiceInstance;
      }
      if (other.DestServiceName.Length != 0) {
        DestServiceName = other.DestServiceName;
      }
      if (other.DestServiceInstance.Length != 0) {
        DestServiceInstance = other.DestServiceInstance;
      }
      if (other.DetectPoint != global::SkyWalking.NetworkProtocol.V3.DetectPoint.Client) {
        DetectPoint = other.DetectPoint;
      }
      if (other.TlsMode.Length != 0) {
        TlsMode = other.TlsMode;
      }
      if (other.InternalErrorCode.Length != 0) {
        InternalErrorCode = other.InternalErrorCode;
      }
      if (other.InternalRequestLatencyNanos != 0L) {
        InternalRequestLatencyNanos = other.InternalRequestLatencyNanos;
      }
      if (other.InternalResponseLatencyNanos != 0L) {
        InternalResponseLatencyNanos = other.InternalResponseLatencyNanos;
      }
      sourceInstanceProperties_.Add(other.sourceInstanceProperties_);
      destInstanceProperties_.Add(other.destInstanceProperties_);
      if (other.ReceivedBytes != 0L) {
        ReceivedBytes = other.ReceivedBytes;
      }
      if (other.SentBytes != 0L) {
        SentBytes = other.SentBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt64();
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
          case 26: {
            SourceServiceName = input.ReadString();
            break;
          }
          case 34: {
            SourceServiceInstance = input.ReadString();
            break;
          }
          case 42: {
            DestServiceName = input.ReadString();
            break;
          }
          case 50: {
            DestServiceInstance = input.ReadString();
            break;
          }
          case 56: {
            DetectPoint = (global::SkyWalking.NetworkProtocol.V3.DetectPoint) input.ReadEnum();
            break;
          }
          case 66: {
            TlsMode = input.ReadString();
            break;
          }
          case 74: {
            InternalErrorCode = input.ReadString();
            break;
          }
          case 80: {
            InternalRequestLatencyNanos = input.ReadInt64();
            break;
          }
          case 88: {
            InternalResponseLatencyNanos = input.ReadInt64();
            break;
          }
          case 98: {
            sourceInstanceProperties_.AddEntriesFrom(input, _repeated_sourceInstanceProperties_codec);
            break;
          }
          case 106: {
            destInstanceProperties_.AddEntriesFrom(input, _repeated_destInstanceProperties_codec);
            break;
          }
          case 112: {
            ReceivedBytes = input.ReadInt64();
            break;
          }
          case 120: {
            SentBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTime = input.ReadInt64();
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
          case 26: {
            SourceServiceName = input.ReadString();
            break;
          }
          case 34: {
            SourceServiceInstance = input.ReadString();
            break;
          }
          case 42: {
            DestServiceName = input.ReadString();
            break;
          }
          case 50: {
            DestServiceInstance = input.ReadString();
            break;
          }
          case 56: {
            DetectPoint = (global::SkyWalking.NetworkProtocol.V3.DetectPoint) input.ReadEnum();
            break;
          }
          case 66: {
            TlsMode = input.ReadString();
            break;
          }
          case 74: {
            InternalErrorCode = input.ReadString();
            break;
          }
          case 80: {
            InternalRequestLatencyNanos = input.ReadInt64();
            break;
          }
          case 88: {
            InternalResponseLatencyNanos = input.ReadInt64();
            break;
          }
          case 98: {
            sourceInstanceProperties_.AddEntriesFrom(ref input, _repeated_sourceInstanceProperties_codec);
            break;
          }
          case 106: {
            destInstanceProperties_.AddEntriesFrom(ref input, _repeated_destInstanceProperties_codec);
            break;
          }
          case 112: {
            ReceivedBytes = input.ReadInt64();
            break;
          }
          case 120: {
            SentBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TCPServiceMeshMetrics : pb::IMessage<TCPServiceMeshMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TCPServiceMeshMetrics> _parser = new pb::MessageParser<TCPServiceMeshMetrics>(() => new TCPServiceMeshMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TCPServiceMeshMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetrics(TCPServiceMeshMetrics other) : this() {
      metrics_ = other.metrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TCPServiceMeshMetrics Clone() {
      return new TCPServiceMeshMetrics(this);
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric> metrics_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.V3.TCPServiceMeshMetric> Metrics {
      get { return metrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TCPServiceMeshMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TCPServiceMeshMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metrics_.Equals(other.metrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TCPServiceMeshMetrics other) {
      if (other == null) {
        return;
      }
      metrics_.Add(other.metrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeshProbeDownstream : pb::IMessage<MeshProbeDownstream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeshProbeDownstream> _parser = new pb::MessageParser<MeshProbeDownstream>(() => new MeshProbeDownstream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeshProbeDownstream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ServiceMeshReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshProbeDownstream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshProbeDownstream(MeshProbeDownstream other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshProbeDownstream Clone() {
      return new MeshProbeDownstream(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeshProbeDownstream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeshProbeDownstream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeshProbeDownstream other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
